<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.wattdepot</groupId>
  <artifactId>wattdepot</artifactId>
  <version>2.2.1-SNAPSHOT</version>
  <name>WattDepot</name>
  <url>https://github.com/csdl/wattdepot/</url>
  <packaging>jar</packaging>
  <prerequisites>
    <maven>3.0.1</maven>
  </prerequisites>
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	<targetJdk>1.6</targetJdk>
	
	<!-- Dependency Versions -->
	<berkeleydb.version>5.0.73</berkeleydb.version>
	<commons-cli.version>1.2</commons-cli.version>
	<commons-lang.version>2.6</commons-lang.version>
	<commons-logging.version>1.1.3</commons-logging.version>
	<concurrent.version>1.0</concurrent.version>
	<dbcp.version>1.4</dbcp.version>
	<tomcat.jdbc.version>7.0.42</tomcat.jdbc.version>
	<derby.version>10.10.1.1</derby.version>
	<google-collections.version>1.0-rc2</google-collections.version>
	<google-visualization-java.version>1.0.2</google-visualization-java.version>
	<httpunit.version>1.7</httpunit.version>
	<icu4j.version>51.2</icu4j.version>
	<jcs.version>1.3</jcs.version>
	<json.version>20090211</json.version>
	<junit.version>4.11</junit.version>
	<modbus-jamod.version>1.2</modbus-jamod.version>
	<opencsv.version>2.3</opencsv.version>
	<pool.version>1.6</pool.version>
	<!-- Mopsa is running Postgres v. 8.4.13 so we need the 8.4-702.jdbc4 version of jdbc -->
    <!-- <postgres.version>9.1-901-1.jdbc4</postgres.version> -->
    <postgres.version>9.1-901-1.jdbc4</postgres.version>
	<!-- Restlet 2.1.1 is the most recent version that does not run very slowly with static
	     content from SPA. 2.1.2 has the slowness problem. -->
	<restlet.version>2.1.1</restlet.version>
	
	<!-- Maven Plugin Versions -->
	<antrun.plugin.version>1.7</antrun.plugin.version>
	<appassembler.plugin.version>1.3.1</appassembler.plugin.version>
	<assembly.plugin.version>2.4</assembly.plugin.version>
	<checkstyle.plugin.version>2.10</checkstyle.plugin.version>
	<findbugs.plugin.version>2.5.2</findbugs.plugin.version>
	<javadoc.plugin.version>2.9.1</javadoc.plugin.version>
	<pmd.plugin.version>2.6</pmd.plugin.version>
	<site.plugin.version>3.3</site.plugin.version>
	<surefire.plugin.version>2.15</surefire.plugin.version>
	
	<config.dir>${basedir}</config.dir>
	<findbugs.filter.file>${config.dir}/findbugs.exclude.xml</findbugs.filter.file>
	<checkstyle.filter.file>${config.dir}/checkstyle.xml</checkstyle.filter.file>
  </properties>
 <dependencies>
	 <dependency>
		<groupId>commons-pool</groupId>
		<artifactId>commons-pool</artifactId>
		<version>${pool.version}</version>
	</dependency>
	<dependency>
		<groupId>commons-dbcp</groupId>
		<artifactId>commons-dbcp</artifactId>
		<version>${dbcp.version}</version>
	</dependency>
	<dependency>
    <groupId>org.apache.tomcat</groupId>
    <artifactId>tomcat-jdbc</artifactId>
    <version>${tomcat.jdbc.version}</version>
  </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
	<dependency>
		<groupId>commons-lang</groupId>
		<artifactId>commons-lang</artifactId>
		<version>${commons-lang.version}</version>
	</dependency>
	<dependency>
		<groupId>commons-cli</groupId>
		<artifactId>commons-cli</artifactId>
		<version>${commons-cli.version}</version>
	</dependency>
	<dependency>
		<groupId>commons-logging</groupId>
		<artifactId>commons-logging</artifactId>
		<version>${commons-logging.version}</version>
	</dependency>   
	<dependency>
		<groupId>net.sf.opencsv</groupId>
		<artifactId>opencsv</artifactId>
		<version>${opencsv.version}</version>
	</dependency>
    <dependency>
		<groupId>com.ibm.icu</groupId>
		<artifactId>icu4j</artifactId>
		<version>${icu4j.version}</version>
	</dependency>
	<dependency>
		<groupId>com.google.collections</groupId>
		<artifactId>google-collections</artifactId>
		<version>${google-collections.version}</version>
	</dependency>
    <dependency>
		<groupId>org.apache.derby</groupId>
		<artifactId>derby</artifactId>
		<version>${derby.version}</version>
	</dependency>  
	<dependency>
		<groupId>com.sleepycat</groupId>
		<artifactId>je</artifactId>
		<version>${berkeleydb.version}</version>
	</dependency>
	<dependency>
		<groupId>com.google.visualization</groupId>
		<artifactId>visualization-datasource</artifactId>
		<version>${google-visualization-java.version}</version>
	</dependency>
    <dependency> 
      <groupId>org.restlet.jse</groupId>
      <artifactId>org.restlet.ext.httpclient</artifactId>
      <version>${restlet.version}</version>
    </dependency>
    <!-- Trying to use the Jetty connector -->
    <dependency> 
      <groupId>org.restlet.jse</groupId>
      <artifactId>org.restlet.ext.jetty</artifactId>
      <version>${restlet.version}</version>
    </dependency>
    <dependency>  
		<groupId>org.restlet.jse</groupId>  
		<artifactId>org.restlet</artifactId>  
		<version>${restlet.version}</version>  
	</dependency>
<!--   <dependency> -->
<!--     <groupId>org.restlet.jse</groupId> -->
<!--     <artifactId>org.restlet.ext.simple</artifactId> -->
<!--     <version>${restlet.version}</version> -->
<!--   </dependency> -->
<!--     <dependency> -->
<!--       <artifactId>org.restlet.ext.net</artifactId> -->
<!--       <version>${restlet.version}</version> -->
<!--     </dependency> --> 
    <dependency>
		<groupId>net.wimpi.modbus</groupId>
		<artifactId>jamod</artifactId>
		<version>${modbus-jamod.version}</version>
	</dependency>
	<dependency>
		<groupId>postgresql</groupId>
		<artifactId>postgresql</artifactId>
		<version>${postgres.version}</version>
	</dependency>
	<dependency>
		<groupId>httpunit</groupId>
		<artifactId>httpunit</artifactId>
		<version>${httpunit.version}</version>
		<scope>test</scope>
	</dependency>
    <dependency>
		<groupId>org.json</groupId>
		<artifactId>json</artifactId>
		<version>${json.version}</version>
		<scope>test</scope>
	</dependency> 
	<dependency>
		<groupId>org.apache.jcs</groupId>
		<artifactId>jcs</artifactId>
		<version>${jcs.version}</version>
	</dependency>       	
  </dependencies>
  <repositories>
	<repository>
		<id>central</id>
		<name>Maven Repository Switchboard</name>
		<layout>default</layout>
		<url>http://repo1.maven.org/maven2</url>
		<snapshots>
			<enabled>false</enabled>
		</snapshots>
    </repository>
	<repository>  
		<id>maven-restlet</id>  
		<name>Public online Restlet repository</name>  
		<url>http://maven.restlet.org</url>  
	</repository> 
	<!--<repository>
        <id>artifactory</id>
        <name>Repository that contains modbus</name>
        <url>http://maven.etl.luc.edu/artifactory/repo</url>
	</repository> -->
	<repository>
        <id>local-repo</id>
        <name>Local repository that contains modbus</name>
        <url>file://${project.basedir}/repository</url>
	</repository>
  </repositories>
  <reporting>
    <plugins>
        <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-jxr-plugin</artifactId>
            <version>2.3</version>
        </plugin>
    </plugins>
  </reporting>
  <build>
	<defaultGoal>verify</defaultGoal>
	<plugins>
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-compiler-plugin</artifactId>
			<version>3.1</version>
			<configuration>
				<source>1.6</source>
				<target>1.6</target>
			</configuration>
		</plugin>
		<!-- Run JUnit tests during "test" phase -->
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-surefire-plugin</artifactId>
			<version>${surefire.plugin.version}</version>
			<configuration>
				<excludes>
					<exclude>**/tinker/**</exclude>
					<exclude>**/TestDb*.java</exclude>
					<exclude>**/TestDerbyStorageImplementation.java</exclude>
					<exclude>**/TestBerkeleyDbImplementation.java</exclude>
					<exclude>**/TestPostgresStorageImplementation.java</exclude>
					<exclude>**/StressTest.java</exclude>
					<exclude>**/TestDatabaseResource.java</exclude>
				</excludes>
			</configuration>
			<executions>
				<execution>
					<id>Memory-Storage-Implementation tests</id>
					<phase>test</phase>
					<goals>
						<goal>test</goal>
					</goals>
					<configuration>
						<systemPropertyVariables>
							<wattdepot-server.db.impl>org.wattdepot.server.db.memory.MemoryStorageImplementation</wattdepot-server.db.impl>
						</systemPropertyVariables>
						<includes>
							<include>**/TestDb*.java</include>
							<include>**/TestDatabaseResource.java</include>
						</includes>
						<excludes>
							<exclude>**/tinker/**</exclude>
							<exclude>**/TestDerbyStorageImplementation.java</exclude>
							<exclude>**/TestBerkeleyDbImplementation.java</exclude>
							<exclude>**/TestPostgresStorageImplementation.java</exclude>
							<exclude>**/StressTest.java</exclude>
						</excludes>
					</configuration>
				</execution>
				<execution>
					<id>Derby-Storage-Implementation tests</id>
					<phase>test</phase>
					<goals>
						<goal>test</goal>
					</goals>
					<configuration>
						<systemPropertyVariables>
							<wattdepot-server.db.impl>org.wattdepot.server.db.derby.DerbyStorageImplementation</wattdepot-server.db.impl>
						</systemPropertyVariables>
						<includes>
							<include>**/TestDb*.java</include>
							<include>**/TestDerbyStorageImplementation.java</include>
							<include>**/TestDatabaseResource.java</include>
						</includes>
						<excludes>
							<exclude>**/tinker/**</exclude>
							<exclude>**/TestBerkeleyDbImplementation.java</exclude>
							<exclude>**/TestPostgresStorageImplementation.java</exclude>
							<exclude>**/StressTest.java</exclude>
						</excludes>
					</configuration>
				</execution>
				<execution>
					<id>Berkeley-DB-Implementation tests</id>
					<phase>test</phase>
					<goals>
						<goal>test</goal>
					</goals>
					<configuration>
						<systemPropertyVariables>
							<wattdepot-server.db.impl>org.wattdepot.server.db.berkeleydb.BerkeleyDbImplementation</wattdepot-server.db.impl>
						</systemPropertyVariables>
						<includes>
							<include>**/TestDb*.java</include>
							<include>**/TestBerkeleyDbImplementation.java</include>
							<include>**/TestDatabaseResource.java</include>
						</includes>
						<excludes>
							<exclude>**/tinker/**</exclude>
							<exclude>**/TestDerbyStorageImplementation.java</exclude>
							<exclude>**/TestPostgresStorageImplementation.java</exclude>
							<exclude>**/StressTest.java</exclude>
						</excludes>
					</configuration>
				</execution>
				<execution>
					<id>Postgres-Implementation tests</id>
					<phase>test</phase>
					<goals>
						<goal>test</goal>
					</goals>
					<configuration>
						<systemPropertyVariables>
							<wattdepot-server.db.impl>org.wattdepot.server.db.postgres.PostgresStorageImplementation</wattdepot-server.db.impl>
						</systemPropertyVariables>
						<includes>
							<include>**/TestDb*.java</include>
							<include>**/TestPostgresStorageImplementation.java</include>
						</includes>
						<excludes>
							<exclude>**/tinker/**</exclude>
							<exclude>**/TestDerbyStorageImplementation.java</exclude>
							<exclude>**/TestBerkeleyDbImplementation.java</exclude>
							<exclude>**/StressTest.java</exclude>
							<!-- snapshot doesn't work with Postgres -->
							<exclude>**/TestDbManagerSnapshot.java</exclude>
							<exclude>**/TestDatabaseResource.java</exclude>
						</excludes>
					</configuration>
				</execution>
			</executions>
		</plugin>
		<!-- Run QA tools during "test" phase -->
		<plugin>
			<groupId>org.codehaus.mojo</groupId>
			<artifactId>findbugs-maven-plugin</artifactId>
			<version>${findbugs.plugin.version}</version>
			<configuration>
				<excludeFilterFile>${findbugs.filter.file}</excludeFilterFile>
				<excludes><exclude>**/jaxb/**</exclude><exclude>**/tinker/**</exclude></excludes>
			</configuration>
			 <executions>
			 <execution>
					<phase>test</phase>
					<goals><goal>check</goal></goals>
				</execution>
			</executions>
		</plugin>
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-checkstyle-plugin</artifactId>
			<version>${checkstyle.plugin.version}</version>
			<configuration>
			  <configLocation>${checkstyle.filter.file}</configLocation>
			  <excludes>**/tinker/**, **/jaxb/**
				</excludes>
			</configuration>
			 <executions>
			 <execution>
					<phase>test</phase>
					<goals><goal>check</goal></goals>
				</execution>
			</executions>
		</plugin>
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-pmd-plugin</artifactId>
			<version>${pmd.plugin.version}</version>
			<configuration>
				<targetJdk>${targetJdk}</targetJdk>
				<linkXref>false</linkXref>
				<sourceEncoding>${project.build.sourceEncoding}</sourceEncoding>
				<minimumTokens>100</minimumTokens>
				<excludes>
					<exclude>**/tinker/**</exclude>
					<exclude>**/jaxb/**</exclude>
				</excludes>
			</configuration>
			 <executions>
				<execution>
					<phase>test</phase>
					<goals><goal>check</goal></goals>
				</execution>
			</executions>
		</plugin>
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-javadoc-plugin</artifactId>
			<version>${javadoc.plugin.version}</version>
			<executions>
				<execution>
				<phase>test</phase>
				<goals>
					<goal>javadoc</goal>
					<goal>test-javadoc</goal>
				</goals>
				</execution>
			</executions>
		</plugin>
		<!-- Run QA & Reporting tools during "site" phase -->
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-site-plugin</artifactId>
			<version>${site.plugin.version}</version>
			<configuration>
				<reportPlugins>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>findbugs-maven-plugin</artifactId>
					<version>${findbugs.plugin.version}</version>
					<configuration>
						<excludeFilterFile>${findbugs.filter.file}</excludeFilterFile>
						<excludes><exclude>**/jaxb/**</exclude><exclude>**/tinker/**</exclude></excludes>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-checkstyle-plugin</artifactId>
					<version>${checkstyle.plugin.version}</version>
					<configuration>
					  <configLocation>${checkstyle.filter.file}</configLocation>
					  <excludes>**/jaxb/**, **/tinker/**</excludes>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-pmd-plugin</artifactId>
					<version>${pmd.plugin.version}</version>
					<reportSets>
					  <reportSet>
						<reports>
						  <report>pmd</report>
						  <report>cpd</report>
						</reports>
					  </reportSet>
					</reportSets>
					<configuration>
						<targetJdk>${targetJdk}</targetJdk>
						<linkXref>false</linkXref>
						<sourceEncoding>${project.build.sourceEncoding}</sourceEncoding>
						<minimumTokens>100</minimumTokens>
						<excludes>
							<exclude>**/tinker/**</exclude>
							<exclude>**/jaxb/**</exclude>
						</excludes>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>${javadoc.plugin.version}</version>
				</plugin>
				</reportPlugins>
			</configuration>
		</plugin>
		<!-- Ant tasks from anttasks.xml. These could be ported to Maven, but I haven't taken the time to do it. -->
<!-- 		<plugin>
			<artifactId>maven-antrun-plugin</artifactId>
			<version>${antrun.plugin.version}</version>
			<executions>
			Create jars during "package" phase
			  <execution>
				<id>jar</id>
				<phase>package</phase>
				<configuration>
				  <tasks>
					<ant antfile="${config.dir}/anttasks.build.xml" target="jar-standalone"/>
				  </tasks>
				</configuration>
				<goals>
				  <goal>run</goal>
				</goals>
			  </execution>
			  Autogenerate jaxb classes, destroying any custom code in those classes.
			  This is not part of any phase, but can be called with "mvn antrun:run execution:jaxb"
			  I haven't tested this, so no guarantees on whether it works or not.
			  <execution>
				<id>jaxb</id>
				<phase/>
				<configuration>
				  <tasks>
					<ant antfile="${config.dir}/anttasks.build.xml" target="jar-standalone"/>
				  </tasks>
				</configuration>
				<goals>
				  <goal>run</goal>
				</goals>
			  </execution>
			</executions>
		</plugin>
 -->		
        <!-- Create distribution during "package" phase -->
        <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-shade-plugin</artifactId>
            <version>2.1</version>
            <configuration>
              <filters>
                  <filter>
                      <artifact>*:*</artifact>
                      <excludes>
                          <exclude>META-INF/*.SF</exclude>
                          <exclude>META-INF/*.DSA</exclude>
                          <exclude>META-INF/*.RSA</exclude>
                      </excludes>
                  </filter>
              </filters>
              <transformers>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                  <manifestEntries>
                    <Main-Class>org.wattdepot.server.Server</Main-Class>
                    <Build-Number>${project.version}</Build-Number>
                  </manifestEntries>
                </transformer>
              </transformers>
            </configuration>
            <executions>
                <execution>
                    <phase>package</phase>
                    <goals>
                        <goal>shade</goal>
                    </goals>
                </execution>
            </executions>
        </plugin>
<!-- 		<plugin>
			<artifactId>maven-assembly-plugin</artifactId>
			<version>${assembly.plugin.version}</version>
			<executions>
			<execution>
			  <id>full-jar</id>
			  <phase>package</phase>
			  <goals><goal>single</goal></goals>
                <configuration>
                  <descriptorRefs>
                    <descriptorRef>jar-with-dependencies</descriptorRef>
                  </descriptorRefs>
                  <archive>
                    <manifest>
                      <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                      <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                      <addClasspath>true</addClasspath>
                    </manifest>
                  </archive>
                </configuration>
			</execution>
			zip source
			<execution>
				<id>source</id>
				<phase>package</phase>
				<goals><goal>single</goal></goals>
				<configuration>
					<finalName>${project.artifactId}</finalName>
					<outputDirectory>${project.build.directory}/jar</outputDirectory>
					<formats><format>zip</format></formats>
					<descriptorRefs>
						<descriptorRef>src</descriptorRef>
					</descriptorRefs>
				</configuration>
			</execution>
			zip javadocs
			<execution>
				<id>javadoc</id>
				<phase>package</phase>
				<goals><goal>single</goal></goals>
				<configuration>
					<finalName>${project.artifactId}</finalName>
					<outputDirectory>${project.build.directory}/jar</outputDirectory>
					<formats><format>zip</format></formats>
					<descriptors><descriptor>${config.dir}/javadoc-assembly.xml</descriptor></descriptors>
				</configuration>
			</execution>
			zip project
			<execution>
				<id>dist</id>
				<phase>package</phase>
				<goals><goal>single</goal></goals>
				<configuration>
					<finalName>${project.artifactId}-${project.version}</finalName>
					<outputDirectory>${project.build.directory}/dist</outputDirectory>
					<formats><format>zip</format></formats>
					<filters>
						<filter>.git/**</filter>
					</filters>
					<descriptors>
						<descriptor>${config.dir}/distribution-assembly.xml</descriptor>
					</descriptors>
				</configuration>
			</execution>
			</executions>
		</plugin> -->
		<!-- Package it up for Heroku during "package" phase -->
		<plugin>
			<groupId>org.codehaus.mojo
			</groupId>
			<artifactId>appassembler-maven-plugin</artifactId>
			<version>${appassembler.plugin.version}</version>
			<executions>
				<execution>
					<phase>package</phase>
					<goals><goal>assemble</goal></goals>
					<configuration>
						<assembleDirectory>target</assembleDirectory>
						<programs>
							<program>
								<mainClass>org.wattdepot.server.Server</mainClass>
								<name>webapp</name>
							</program>
						</programs>
					</configuration>
				</execution>
			</executions>
		</plugin>
	</plugins>
  </build>
  <organization>
    <name>Collaborative Software Development Laboratory</name>
	<url>http://csdl.ics.hawaii.edu</url>
  </organization>
  <issueManagement>
	<url>https://github.com/csdl/wattdepot/issues</url>
	<system>GitHub Issues</system>
  </issueManagement>
  <description>WattDepot is an open source, RESTful web service that collects electricity data (such as current power utilization or cumulative power utilization) from meters and stores it in a database.</description>
</project>